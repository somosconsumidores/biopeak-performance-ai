name: Deploy Specific Function (Manual)

on:
  workflow_dispatch:
    inputs:
      function_name:
        description: 'Select function to deploy'
        required: true
        type: choice
        options:
          - build-activity-chart-from-strava-streams
          - calculate-statistics-metrics
          - calculate-strava-performance-metrics
          - classify-workouts-from-series
          - garmin-activities-webhook
          - garmin-activity-details-webhook
          - garmin-auth
          - garmin-backfill
          - garmin-connect
          - garmin-daily-summaries-webhook
          - garmin-deauth
          - garmin-disconnect
          - garmin-epochs-webhook
          - garmin-heart-rates-webhook
          - garmin-pulse-oxs-webhook
          - garmin-respiration-webhook
          - garmin-sleep-webhook
          - garmin-stress-webhook
          - garmin-user-metrics-webhook
          - get-activity-details-from-strava-streams
          - get-athlete-pr
          - get-backfill-logs
          - get-subscriptions-with-details
          - get-workout-file
          - list-available-workouts
          - migrate-subscription-user-id
          - post-activity-status
          - process-activity-chart-from-garmin-log
          - quick-check-subscription
          - revenuecat-webhook
          - strava-auth
          - strava-activity-streams
          - strava-backfill
          - strava-connect
          - strava-deauth
          - strava-disconnect
          - strava-refresh-token
          - strava-sync-background
          - strava-webhook
          - sync-activities-with-statistics-and-charts
          - sync-garmin-activities
          - sync-garmin-activity-details
          - sync-garmin-daily-summaries
          - sync-garmin-epochs
          - sync-garmin-heart-rates
          - sync-garmin-pulse-oxs
          - sync-garmin-respiration
          - sync-garmin-sleep
          - sync-garmin-stress
          - sync-garmin-user-metrics
          - sync-recent-activities
          - update-subscription-status

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Verify function exists
        run: |
          if [ ! -d "supabase/functions/${{ github.event.inputs.function_name }}" ]; then
            echo "❌ Function directory not found: ${{ github.event.inputs.function_name }}"
            exit 1
          fi
          
          if [ ! -f "supabase/functions/${{ github.event.inputs.function_name }}/index.ts" ]; then
            echo "❌ index.ts not found in function: ${{ github.event.inputs.function_name }}"
            exit 1
          fi
          
          echo "✅ Function structure validated"

      - name: Deploy function
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
        run: |
          # Link to project
          supabase link --project-ref $PROJECT_ID
          
          echo "🚀 Deploying function: ${{ github.event.inputs.function_name }}"
          
          if supabase functions deploy ${{ github.event.inputs.function_name }} --project-ref $PROJECT_ID; then
            echo "✅ Successfully deployed: ${{ github.event.inputs.function_name }}"
          else
            echo "❌ Failed to deploy: ${{ github.event.inputs.function_name }}"
            exit 1
          fi

      - name: Summary
        if: always()
        run: |
          echo "### Manual Deployment Summary 🎯" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Function:** \`${{ github.event.inputs.function_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
