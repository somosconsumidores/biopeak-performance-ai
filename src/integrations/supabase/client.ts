// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import { Capacitor } from '@capacitor/core';

// Create a storage adapter that works in both web and native environments
const createStorageAdapter = () => {
  if (Capacitor.isNativePlatform()) {
    // Use Capacitor Preferences for native platforms
    return {
      getItem: async (key: string) => {
        try {
          const { Preferences } = await import('@capacitor/preferences');
          const { value } = await Preferences.get({ key });
          return value;
        } catch (error) {
          console.warn('[Supabase] Native storage getItem error:', error);
          return null;
        }
      },
      setItem: async (key: string, value: string) => {
        try {
          const { Preferences } = await import('@capacitor/preferences');
          await Preferences.set({ key, value });
        } catch (error) {
          console.warn('[Supabase] Native storage setItem error:', error);
        }
      },
      removeItem: async (key: string) => {
        try {
          const { Preferences } = await import('@capacitor/preferences');
          await Preferences.remove({ key });
        } catch (error) {
          console.warn('[Supabase] Native storage removeItem error:', error);
        }
      },
    };
  } else {
    // Use localStorage for web
    return {
      getItem: (key: string) => {
        return localStorage.getItem(key);
      },
      setItem: (key: string, value: string) => {
        localStorage.setItem(key, value);
      },
      removeItem: (key: string) => {
        localStorage.removeItem(key);
      },
    };
  }
};

const SUPABASE_URL = "https://grcwlmltlcltmwbhdpky.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdyY3dsbWx0bGNsdG13YmhkcGt5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIxNjQ1NjksImV4cCI6MjA2Nzc0MDU2OX0.vz_wCV_SEfsvWG7cSW3oJHMs-32x_XQF5hAYBY-m8sM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

console.log(`[Supabase] Initializing client for platform: ${Capacitor.getPlatform()}, isNative: ${Capacitor.isNativePlatform()}`);

export const supabase = createClient(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: createStorageAdapter(),
    persistSession: true,
    autoRefreshToken: true,
  }
});